{
    "openapi": "3.0.0",
    "info": {
        "title": "BoilerPlate API",
        "description": "BoilerPlate API",
        "contact": {
            "name": "BoilerPLate API",
            "email": "info@techesthete.net"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "/api/v1"
        }
    ],
    "paths": {
<<<<<<< HEAD
        "/register": {
            "post": {
                "tags": [
                    "Register"
                ],
                "summary": "Register a new user",
                "description": "Registers a new user in the system.",
                "operationId": "registerUser",
                "parameters": [
                    {
                        "name": "first_name",
                        "in": "query",
                        "description": "User's first_name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "last_name",
                        "in": "query",
                        "description": "User's last_name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "User's email",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "description": "User's password",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "phone",
                        "in": "query",
                        "description": "User's phone number",
                        "required": true,
                        "schema": {
                            "type": "string"
=======
        "/blogs": {
            "get": {
                "tags": [
                    "Blogs"
                ],
                "summary": "Get a list of blog posts",
                "description": "Retrieve a paginated list of blog posts.",
                "operationId": "getBlogPosts",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of posts per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 5
>>>>>>> 86cece483a60f308c1ea8af34eebe33df9a93ba1
                        }
                    }
                ],
                "responses": {
                    "200": {
<<<<<<< HEAD
                        "description": "Login successful"
                    },
                    "202": {
                        "description": "Accepted"
                    },
                    "208": {
                        "description": "AlreadyReported"
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "401": {
                        "description": "Invalid credentials"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "406": {
                        "description": "NotAcceptable"
                    },
                    "422": {
                        "description": "UnprocessableEntity"
                    },
                    "500": {
                        "description": "InternalServerError"
=======
                        "description": "List of blog posts retrieved successfully"
                    },
                    "204": {
                        "description": "No blog posts found"
                    },
                    "400": {
                        "description": "Invalid page or per_page parameter"
                    }
                }
            }
        },
        "/blogs/{slug}": {
            "get": {
                "tags": [
                    "Blogs"
                ],
                "summary": "Get a blog post by slug",
                "description": "Retrieve a blog post by its slug.",
                "operationId": "getBlogBySlug",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug of the blog post to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Blog post retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "title": {
                                            "type": "string"
                                        },
                                        "meta_title": {
                                            "type": "string"
                                        },
                                        "meta_description": {
                                            "type": "string"
                                        },
                                        "content": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Blog not found"
>>>>>>> 86cece483a60f308c1ea8af34eebe33df9a93ba1
                    }
                }
            }
        },
<<<<<<< HEAD
        "/resend": {
            "post": {
                "tags": [
                    "Resend otp and code"
                ],
                "summary": "Activate User Account",
                "operationId": "f37fa41754d96e3ee58466c8f6ed829c",
                "parameters": [
                    {
                        "name": "email",
                        "in": "query",
                        "description": "User's email",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "phone",
                        "in": "query",
                        "description": "User's phone",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Activation successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Your Email and Phone number are verified."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "423": {
                        "description": "Activation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "email": [
                                                    "Email activation error message"
                                                ],
                                                "phone": [
                                                    "Phone activation error message"
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "code": [
                                                    "Code validation error message"
                                                ],
                                                "otp": [
                                                    "OTP validation error message"
                                                ],
                                                "email": [
                                                    "Email validation error message"
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/activation": {
            "post": {
                "tags": [
                    "User Activation"
                ],
                "summary": "Activate User Account",
                "operationId": "699cd43ad31ef0a80ee805c0e4d552d8",
                "parameters": [
                    {
                        "name": "email",
                        "in": "query",
                        "description": "User's email",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "code",
                        "in": "query",
                        "description": "User's email varification code",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "phone",
                        "in": "query",
                        "description": "User's phone",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "otp",
                        "in": "query",
                        "description": "User's phone otp",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Activation successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Your Email and Phone number are verified."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "423": {
                        "description": "Activation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "email": [
                                                    "Email activation error message"
                                                ],
                                                "phone": [
                                                    "Phone activation error message"
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "code": [
                                                    "Code validation error message"
                                                ],
                                                "otp": [
                                                    "OTP validation error message"
                                                ],
                                                "email": [
                                                    "Email validation error message"
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "tags": [
                    "Login"
                ],
                "summary": "Login new user",
                "description": "Login a new user in the system.",
                "operationId": "loginUser",
                "parameters": [
                    {
                        "name": "email",
                        "in": "query",
                        "description": "User's email",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "description": "User's password",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Login successful"
                    },
                    "202": {
                        "description": "Accepted"
                    },
                    "208": {
                        "description": "AlreadyReported"
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "401": {
                        "description": "Invalid credentials"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "406": {
                        "description": "NotAcceptable"
                    },
                    "422": {
                        "description": "UnprocessableEntity"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                }
            }
        },
        "/logout": {
            "post": {
                "tags": [
                    "LogOut"
                ],
                "summary": "User Logout",
                "operationId": "68a6108af04af5e3bc1ea68a6c6f1299",
                "responses": {
                    "200": {
                        "description": "User successfully logged out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Logout successful."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized logout request."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Access denied."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/refresh": {
            "post": {
                "tags": [
                    "Refresh Token"
                ],
                "summary": "Refresh Token",
                "operationId": "0c3ea3c61aed881016646810460499e9",
                "responses": {
                    "200": {
                        "description": "Token Refresh successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "token refresh successful."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized refresh request."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Access denied."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/me": {
            "post": {
                "tags": [
                    "Get Authenticate User"
                ],
                "summary": "Get User",
                "operationId": "80f54c9e0c6b19c5300f0ad0139afa60",
                "responses": {
                    "200": {
                        "description": "User get successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "user get successful."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized get user request."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Access denied."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/forget_password": {
            "post": {
                "tags": [
                    "Forget Password"
                ],
                "summary": "user forgetPassword",
                "description": "Forget Password in the system.",
                "operationId": "forgetPassword",
                "parameters": [
                    {
                        "name": "email",
                        "in": "query",
                        "description": "User's forget password",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": " check email."
                    },
                    "202": {
                        "description": "Accepted"
                    },
                    "208": {
                        "description": "AlreadyReported"
                    },
                    "400": {
                        "description": "BadRequest"
                    },
                    "401": {
                        "description": "Invalid credentials"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "406": {
                        "description": "NotAcceptable"
                    },
                    "422": {
                        "description": "UnprocessableEntity"
                    },
                    "500": {
                        "description": "InternalServerError"
                    }
                }
            }
        },
        "/media": {
            "post": {
                "tags": [
                    "Media"
                ],
                "summary": "Upload a media file",
                "operationId": "9631b01d093a302143e36dc950d8c6ae",
                "requestBody": {
=======
        "/blogs/store": {
            "post": {
                "tags": [
                    "Blogs"
                ],
                "summary": "Create a new blog post",
                "description": "Create a new blog post with the provided data.",
                "operationId": "createBlog",
                "requestBody": {
                    "description": "Blog post data",
>>>>>>> 86cece483a60f308c1ea8af34eebe33df9a93ba1
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "title": {
<<<<<<< HEAD
                                        "description": "Title of the media",
                                        "type": "string",
                                        "example": "Sample Media"
                                    },
                                    "file": {
                                        "description": "Media file to upload (Supported formats: jpeg, png, jpg, gif, svg, pdf, docx)",
=======
                                        "type": "string",
                                        "example": "Sample Blog Title"
                                    },
                                    "meta_title": {
                                        "type": "string",
                                        "example": "Sample Meta Title"
                                    },
                                    "meta_description": {
                                        "type": "string",
                                        "example": "Sample Meta Description"
                                    },
                                    "slug": {
                                        "type": "string",
                                        "example": "sample-blog-title"
                                    },
                                    "image": {
                                        "description": "Image file for the blog post",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "content": {
                                        "type": "string",
                                        "example": "Sample blog content..."
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Blog post created successfully"
                    },
                    "422": {
                        "description": "Unprocessable Entity: Validation failed or missing data"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/blogs/edit/{id}": {
            "get": {
                "tags": [
                    "Blogs"
                ],
                "summary": "Edit a blog post",
                "description": "Retrieve a specific blog post for editing by providing its ID.",
                "operationId": "editBlog",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the blog post to edit",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Blog post retrieved successfully for editing"
                    },
                    "404": {
                        "description": "Blog post not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/blogs/{id}": {
            "post": {
                "tags": [
                    "Blogs"
                ],
                "summary": "Update a blog post",
                "description": "Update a specific blog post by providing its ID and data to be updated.",
                "operationId": "updateBlog",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the blog post to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated blog post data",
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Updated Blog Title"
                                    },
                                    "meta_title": {
                                        "type": "string",
                                        "example": "Updated Meta Title"
                                    },
                                    "meta_description": {
                                        "type": "string",
                                        "example": "Updated Meta Description"
                                    },
                                    "slug": {
                                        "type": "string",
                                        "example": "updated-blog-title"
                                    },
                                    "content": {
                                        "type": "string",
                                        "example": "Updated blog content..."
                                    },
                                    "image": {
                                        "description": "Updated image file for the blog post",
>>>>>>> 86cece483a60f308c1ea8af34eebe33df9a93ba1
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
<<<<<<< HEAD
                        "description": "Media uploaded successfully",
=======
                        "description": "Blog post updated successfully"
                    },
                    "400": {
                        "description": "Validation failed or missing data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "object",
                                            "example": "Validation error or missing data"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Blog post not found",
>>>>>>> 86cece483a60f308c1ea8af34eebe33df9a93ba1
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
<<<<<<< HEAD
                                            "example": "Your Media file has been uploaded successfully."
=======
                                            "example": "Blog not found"
>>>>>>> 86cece483a60f308c1ea8af34eebe33df9a93ba1
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
<<<<<<< HEAD
                    "208": {
                        "description": "File with the same title already exists",
=======
                    "500": {
                        "description": "Internal Server Error",
>>>>>>> 86cece483a60f308c1ea8af34eebe33df9a93ba1
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
<<<<<<< HEAD
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "message": {
                                                        "type": "string",
                                                        "example": "The same title name File already exists."
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "description": "Validation errors",
                                            "type": "object"
=======
                                        "message": {
                                            "type": "string",
                                            "example": "Internal Server Error"
>>>>>>> 86cece483a60f308c1ea8af34eebe33df9a93ba1
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
<<<<<<< HEAD
        "/get-media/{id}": {
            "get": {
                "tags": [
                    "Media"
                ],
                "summary": "Get a specific media by ID",
                "operationId": "a0b749a218fdd626a71d60d0da9cb7c5",
=======
        "/blogs/delete/{id}": {
            "delete": {
                "tags": [
                    "Blogs"
                ],
                "summary": "Delete a blog post",
                "description": "Delete a specific blog post by providing its ID.",
                "operationId": "deleteBlog",
>>>>>>> 86cece483a60f308c1ea8af34eebe33df9a93ba1
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
<<<<<<< HEAD
                        "description": "ID of the media",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
=======
                        "description": "ID of the blog post to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
>>>>>>> 86cece483a60f308c1ea8af34eebe33df9a93ba1
                        }
                    }
                ],
                "responses": {
                    "200": {
<<<<<<< HEAD
                        "description": "Successful response",
=======
                        "description": "Blog post deleted successfully",
>>>>>>> 86cece483a60f308c1ea8af34eebe33df9a93ba1
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
<<<<<<< HEAD
                                        "data": {
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully loaded."
=======
                                        "message": {
                                            "type": "string",
                                            "example": "Blog post deleted successfully"
>>>>>>> 86cece483a60f308c1ea8af34eebe33df9a93ba1
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
<<<<<<< HEAD
                        "description": "Media not found",
=======
                        "description": "Blog post not found",
>>>>>>> 86cece483a60f308c1ea8af34eebe33df9a93ba1
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
<<<<<<< HEAD
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "message": {
                                                        "type": "string",
                                                        "example": "Media not found."
                                                    }
                                                },
                                                "type": "object"
                                            }
=======
                                        "message": {
                                            "type": "string",
                                            "example": "Blog not found"
>>>>>>> 86cece483a60f308c1ea8af34eebe33df9a93ba1
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
<<<<<<< HEAD
        "/all-media": {
            "get": {
                "tags": [
                    "Media"
                ],
                "summary": "Get all media",
                "operationId": "7ef394cf83ef52f95b7c959a9d1b6bd4",
                "responses": {
                    "200": {
                        "description": "Successful response with media data",
=======
        "/blogs/restore-blog/{id}": {
            "put": {
                "tags": [
                    "Blogs"
                ],
                "summary": "Restore a soft-deleted blog post",
                "description": "Restore a soft-deleted blog post by providing its ID.",
                "operationId": "restoreBlog",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the soft-deleted blog post to restore",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Blog post restored successfully"
                    },
                    "404": {
                        "description": "Blog post not found in soft-deleted records"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/users/view": {
            "get": {
                "tags": [
                    "Admin Users"
                ],
                "summary": "Get all users",
                "description": "Retrieve a list of all users.",
                "operationId": "getAllUsers",
                "responses": {
                    "200": {
                        "description": "List of users retrieved successfully"
                    },
                    "401": {
                        "description": "Unauthorized",
>>>>>>> 86cece483a60f308c1ea8af34eebe33df9a93ba1
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
<<<<<<< HEAD
                                        "data": {
                                            "type": "array",
                                            "items": {}
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "All media successfully loaded."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Media not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "message": {
                                                        "type": "string",
                                                        "example": "Media not found."
                                                    }
                                                },
                                                "type": "object"
                                            }
=======
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
>>>>>>> 86cece483a60f308c1ea8af34eebe33df9a93ba1
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
<<<<<<< HEAD
        "/update-media/{id}": {
            "post": {
                "tags": [
                    "Media"
                ],
                "summary": "Update media by ID",
                "operationId": "eb0134899102c849523b8d0ab4a92480",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the media to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "description": "Title of the media",
                                        "type": "string",
                                        "example": "Sample Media"
                                    },
                                    "file": {
                                        "description": "Media file to upload (Supported formats: jpeg, png, jpg, gif, svg, pdf, docx)",
                                        "type": "string",
                                        "format": "binary"
=======
        "/user": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Create a new user",
                "description": "Creates a new user with the provided information.",
                "operationId": "createUser",
                "requestBody": {
                    "description": "User data",
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "properties": {
                                    "first_name": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "John"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "maxLength": 255,
                                        "example": "john.doe@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "minLength": 6,
                                        "example": "secret123"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "1234567890"
>>>>>>> 86cece483a60f308c1ea8af34eebe33df9a93ba1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
<<<<<<< HEAD
                        "description": "Successful response",
=======
                        "description": "User created successfully"
                    },
                    "400": {
                        "description": "Invalid login credentials or validation error",
>>>>>>> 86cece483a60f308c1ea8af34eebe33df9a93ba1
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
<<<<<<< HEAD
                                            "example": "Media successfully updated."
=======
                                            "example": "Invalid login credentials or validation error"
>>>>>>> 86cece483a60f308c1ea8af34eebe33df9a93ba1
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
<<<<<<< HEAD
                    "404": {
                        "description": "Media not found",
=======
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/admin/user/{id}": {
            "get": {
                "tags": [
                    "Admin Users"
                ],
                "summary": "Get user details by ID",
                "description": "Retrieve user details by providing the user's ID.",
                "operationId": "getUserById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User details retrieved successfully"
                    },
                    "404": {
                        "description": "User not found",
>>>>>>> 86cece483a60f308c1ea8af34eebe33df9a93ba1
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
<<<<<<< HEAD
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "message": {
                                                        "type": "string",
                                                        "example": "Record not found."
                                                    }
                                                },
                                                "type": "object"
                                            }
=======
                                        "message": {
                                            "type": "string",
                                            "example": "User not found"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Exception message (if applicable)"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Admin Users"
                ],
                "summary": "Restore soft-deleted user by ID",
                "description": "Restore a soft-deleted user by providing the user's ID.",
                "operationId": "restoreSoftDeletedUserById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the soft-deleted user to restore",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User restored successfully"
                    },
                    "404": {
                        "description": "User not found in soft-deleted records",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User not found in soft-deleted records"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Admin Users"
                ],
                "summary": "Update user details by ID",
                "description": "Update user details by providing the user's ID.",
                "operationId": "updateUserById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated user data",
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "properties": {
                                    "first_name": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "minLength": 2,
                                        "example": "John"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "minLength": 2,
                                        "example": "Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "maxLength": 255,
                                        "example": "john.doe@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "minLength": 6,
                                        "example": "secret123"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "maxLength": 15,
                                        "minLength": 10,
                                        "example": "1234567890"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User details updated successfully"
                    },
                    "400": {
                        "description": "Invalid login credentials or validation error"
                    },
                    "404": {
                        "description": "User not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/admin/{id}": {
            "delete": {
                "tags": [
                    "Admin Users"
                ],
                "summary": "Soft Delete user by ID",
                "description": "Soft delete user by providing the user's ID.",
                "operationId": "softDeleteUserById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user to soft delete",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User soft deleted successfully"
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User not found"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Exception message (if applicable)"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Admin Users"
                ],
                "summary": "Inline update user status by ID",
                "description": "Update a user's status by providing the user's ID and the new status value.",
                "operationId": "inlineUpdateUserStatus",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "User status update data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "status": {
                                        "description": "New status value for the user",
                                        "type": "string",
                                        "maxLength": 255
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User status updated successfully"
                    },
                    "400": {
                        "description": "Validation error or missing status value"
                    },
                    "500": {
                        "description": "User status update failed"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/admin/bulk-delete": {
            "put": {
                "tags": [
                    "Admin Users"
                ],
                "summary": "Bulk soft delete users by IDs",
                "description": "Bulk soft delete users by providing an array of user IDs.",
                "operationId": "bulkSoftDeleteUsers",
                "requestBody": {
                    "description": "Array of user IDs to be soft-deleted",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "record_ids": {
                                        "description": "Array of user IDs to be deleted",
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Bulk soft delete successful"
                    },
                    "400": {
                        "description": "Validation error or invalid user IDs",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Validation error or invalid user IDs"
>>>>>>> 86cece483a60f308c1ea8af34eebe33df9a93ba1
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
<<<<<<< HEAD
                    "422": {
                        "description": "Validation Error",
=======
                    "500": {
                        "description": "Bulk soft delete failed",
>>>>>>> 86cece483a60f308c1ea8af34eebe33df9a93ba1
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
<<<<<<< HEAD
                                        "errors": {
                                            "properties": {
                                                "title": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "file": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
=======
                                        "message": {
                                            "type": "string",
                                            "example": "Bulk soft delete failed"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Exception message (if applicable)"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/admin/action/manage": {
            "post": {
                "tags": [
                    "Admin Users"
                ],
                "summary": "Manage user records with bulk actions",
                "description": "Perform bulk actions on user records such as sorting, searching, filtering, pagination, bulk editing, and bulk soft deleting.",
                "operationId": "manageUserRecords",
                "requestBody": {
                    "description": "Bulk action data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "actions": {
                                        "description": "Array of actions to perform",
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "action": {
                                                    "description": "Action to perform (e.g., sort, search, filter, pagination, bulkEdit, bulkdelete, inlineEdit)",
                                                    "type": "string"
                                                },
                                                "column": {
                                                    "description": "Column to sort by (only applicable for 'sort' action)",
                                                    "type": "string"
                                                },
                                                "order": {
                                                    "description": "Sort order ('asc' or 'desc', only applicable for 'sort' action)",
                                                    "type": "string"
                                                },
                                                "email": {
                                                    "description": "Email to search for (only applicable for 'search' action)",
                                                    "type": "string"
                                                },
                                                "first_name": {
                                                    "description": "First name to search for (only applicable for 'search' action)",
                                                    "type": "string"
                                                },
                                                "phone": {
                                                    "description": "Phone number to search for (only applicable for 'search' action)",
                                                    "type": "string"
                                                },
                                                "status_bulk": {
                                                    "description": "New status value (only applicable for 'bulkEdit' action)",
                                                    "type": "string"
>>>>>>> 86cece483a60f308c1ea8af34eebe33df9a93ba1
                                                }
                                            },
                                            "type": "object"
                                        }
<<<<<<< HEAD
                                    },
                                    "type": "object"
                                }
=======
                                    }
                                },
                                "type": "object"
>>>>>>> 86cece483a60f308c1ea8af34eebe33df9a93ba1
                            }
                        }
                    }
                },
<<<<<<< HEAD
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/delete-media/{id}": {
            "post": {
                "tags": [
                    "Media"
                ],
                "summary": "Delete media by ID",
                "operationId": "2d67aff6263a00117df9495ffdf04640",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the media to delete",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Media successfully deleted."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Media not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "message": {
                                                        "type": "string",
                                                        "example": "Record not found."
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
=======
                "responses": {
                    "200": {
                        "description": "Bulk actions performed successfully"
                    },
                    "400": {
                        "description": "Validation error or missing data for actions"
                    },
                    "404": {
                        "description": "User not found (only applicable for 'inlineEdit' action)"
>>>>>>> 86cece483a60f308c1ea8af34eebe33df9a93ba1
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "name": "Authorization",
                "in": "header",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    }
}